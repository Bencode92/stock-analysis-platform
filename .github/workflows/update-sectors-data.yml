name: Update Sector Data

on:
  # Déclenchement manuel
  workflow_dispatch:
  # Ajout d'un déclenchement automatique toutes les 30 minutes
  schedule:
    - cron: '15,45 * * * *'  # Exécuter à 15e et 45e minute de chaque heure

# Configuration des permissions
permissions:
  contents: write

jobs:
  update-data:
    runs-on: ubuntu-latest
    # Définir un timeout plus court pour éviter les longues exécutions
    timeout-minutes: 10
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # S'assurer que l'action checkout récupère l'historique complet
          fetch-depth: 0
          # S'assurer que le token GitHub est utilisé pour l'authentification
          token: ${{ github.token }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Create data directory if needed
        run: mkdir -p data
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4 urllib3
        
      - name: Scrape sector data
        run: python scripts/scrape_sectors.py
        continue-on-error: true  # Ne pas faire échouer le workflow si le scraping échoue
        
      - name: Verify data file exists
        run: |
          if [ ! -f data/sectors.json ]; then
            echo "Fichier de données sectorielles non trouvé, création d'un fichier vide"
            echo "{}" > data/sectors.json
          fi
        
      - name: Commit and push if changed
        run: |
          # Configuration de git avec le token explicite
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # Ajouter le fichier data/sectors.json
          git add data/sectors.json
          
          # Vérifier s'il y a des modifications à commiter
          if git diff --staged --quiet; then
            echo "Aucune modification détectée, pas de commit nécessaire"
          else
            echo "Modifications détectées, création d'un commit"
            git commit -m "Update sector data [skip ci]"
            
            # Utiliser le token GITHUB_TOKEN pour l'authentification
            git push origin HEAD:${GITHUB_REF}
          fi