name: G√©n√©ration des Portefeuilles

on:
  push:
    branches: [ main ]
    paths:
      - actualites.html
      - marche.html
  schedule:
    - cron: "0 8 * * *"   # UTC
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: portfolios-${{ github.ref }}
  cancel-in-progress: true

jobs:
  generate-portfolios:
    runs-on: ubuntu-latest
    env:
      API_CHAT: ${{ secrets.API_CHAT }}
      PYTHONUNBUFFERED: "1"
      PIP_DISABLE_PIP_VERSION_CHECK: "1"

    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üêç Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"
          cache: "pip"

      - name: üì¶ Installer les d√©pendances (cach√©es)
        run: |
          echo -e "pandas\nnumpy\nrequests\nbeautifulsoup4\nlxml" > requirements.txt
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: üîê V√©rifier la pr√©sence de la cl√© API
        run: |
          if [ -z "${API_CHAT}" ]; then
            echo "‚ùå Secret API_CHAT manquant dans le d√©p√¥t (Settings > Secrets and variables > Actions)."
            exit 1
          fi

      - name: üßπ Nettoyage des placeholders √©ventuels
        run: |
          mkdir -p data debug/prompts
          if [ -f data/portfolio_explanations.json ] && [ "$(cat data/portfolio_explanations.json | tr -d ' \n\r')" = "1" ]; then
            echo "‚ö†Ô∏è Placeholder d√©tect√© dans data/portfolio_explanations.json ‚Üí suppression"
            rm -f data/portfolio_explanations.json
          fi

      - name: üöÄ Ex√©cuter le script
        run: python generate_portfolios.py

      - name: ‚úÖ Sanity checks des sorties
        run: |
          set -e
          for f in data/portfolios.json data/portfolio_explanations.json data/portfolio_explanations.md; do
            if [ ! -s "$f" ]; then
              echo "‚ùå Fichier manquant ou vide: $f"; exit 1
            fi
          done
          python - << 'PY'
import json,sys
for f in ["data/portfolios.json","data/portfolio_explanations.json"]:
    with open(f,"r",encoding="utf-8") as fh:
        json.load(fh)
print("JSON OK")
PY

      - name: üíæ Commit & push
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git add data/ debug/prompts/ || true
          if git diff --cached --quiet; then
            echo "rien √† committer"
          else
            git commit -m "üìä Mise √† jour automatique des portefeuilles"
            git pull --rebase --autostash
            git push
          fi

