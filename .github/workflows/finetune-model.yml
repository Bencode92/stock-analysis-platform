name: 🤖 TradePulse FinBERT Fine-tuning

on:
  workflow_dispatch:
    inputs:
      dataset_path:
        description: 'Chemin vers le dataset de fine-tuning'
        required: true
        default: 'ml/feedback/feedback_data.json'
      model_name:
        description: 'Nom du modèle custom'
        required: true
        default: 'tradepulse-finbert-v1'
      push_to_hub:
        description: 'Push model to HuggingFace Hub'
        type: boolean
        required: false
        default: false
      epochs:
        description: 'Nombre d epochs'
        required: false
        default: '3'

permissions:
  contents: write

jobs:
  finetune-model:
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
      
      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      
      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install "transformers==4.41.0" "datasets==2.19.1" "torch>=2.0.0"
          pip install "huggingface_hub>=0.20.0" "accelerate>=0.20.0"
          pip install "scikit-learn>=1.3.0" "pandas>=2.0.0" "numpy>=1.24.0"
      
      # 🚀 SOLUTION CORRIGÉE : Action officielle HuggingFace
      - name: 🔐 Login to Hugging Face
        if: ${{ github.event.inputs.push_to_hub == 'true' }}
        uses: huggingface/huggingface-cli-login@v1
        with:
          hf_token: ${{ secrets.HF_TOKEN }}
      
      - name: 📁 Create directories
        run: |
          mkdir -p models/${{ github.event.inputs.model_name }}
          mkdir -p models/${{ github.event.inputs.model_name }}/logs
          mkdir -p ml/feedback
      
      - name: 🔍 Verify script exists
        run: |
          if [ ! -f "scripts/finetune.py" ]; then
            echo "❌ scripts/finetune.py not found!"
            exit 1
          fi
          echo "✅ scripts/finetune.py found"
          echo "📂 File size: $(wc -c < scripts/finetune.py) bytes"
          echo "🔍 First few lines:"
          head -5 scripts/finetune.py
      
      - name: 🏋️ Run fine-tuning
        run: |
          cd ${{ github.workspace }}
          python scripts/finetune.py
        env:
          DATASET_PATH: ${{ github.event.inputs.dataset_path }}
          MODEL_NAME: ${{ github.event.inputs.model_name }}
          EPOCHS: ${{ github.event.inputs.epochs }}
          PUSH_TO_HUB: ${{ github.event.inputs.push_to_hub }}
          TOKENIZERS_PARALLELISM: false
          TRANSFORMERS_CACHE: ./cache
      
      - name: 📊 Verify training outputs
        run: |
          echo "=== TradePulse FinBERT Training Summary ===" > training_summary.txt
          echo "Model: ${{ github.event.inputs.model_name }}" >> training_summary.txt
          echo "Dataset: ${{ github.event.inputs.dataset_path }}" >> training_summary.txt
          echo "Epochs: ${{ github.event.inputs.epochs }}" >> training_summary.txt
          echo "Push to Hub: ${{ github.event.inputs.push_to_hub }}" >> training_summary.txt
          echo "Timestamp: $(date)" >> training_summary.txt
          echo "" >> training_summary.txt
          
          # Vérifier le log principal
          if [ -f "finetune.log" ]; then
            echo "✅ Training log found ($(wc -l < finetune.log) lines)" >> training_summary.txt
            echo "📝 Last 10 lines of log:" >> training_summary.txt
            tail -10 finetune.log >> training_summary.txt
          else
            echo "❌ Training log not found" >> training_summary.txt
          fi
          echo "" >> training_summary.txt
          
          # Vérifier le modèle
          if [ -d "models/${{ github.event.inputs.model_name }}" ]; then
            echo "✅ Model directory found" >> training_summary.txt
            echo "📁 Model files:" >> training_summary.txt
            ls -la "models/${{ github.event.inputs.model_name }}" >> training_summary.txt
            
            # Vérifier les logs du modèle
            if [ -d "models/${{ github.event.inputs.model_name }}/logs" ]; then
              echo "📊 Training logs:" >> training_summary.txt
              ls -la "models/${{ github.event.inputs.model_name }}/logs" >> training_summary.txt
            fi
          else
            echo "❌ Model directory not found" >> training_summary.txt
          fi
          
          echo "" >> training_summary.txt
          echo "=== Environment Info ===" >> training_summary.txt
          echo "Python version: $(python --version)" >> training_summary.txt
          echo "PyTorch version: $(python -c 'import torch; print(torch.__version__)')" >> training_summary.txt
          echo "Transformers version: $(python -c 'import transformers; print(transformers.__version__)')" >> training_summary.txt
          echo "CUDA available: $(python -c 'import torch; print(torch.cuda.is_available())')" >> training_summary.txt
          
          # Afficher le résumé
          cat training_summary.txt
      
      - name: 📤 Upload Training Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: training-logs-${{ github.run_id }}
          path: |
            finetune.log
            models/**/logs/**
            training_summary.txt
          retention-days: 7
      
      - name: 📤 Upload Model Artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: tradepulse-finbert-${{ github.run_id }}
          path: |
            models/**
            training_summary.txt
          retention-days: 30
      
      - name: 🏷️ Commit model to repository
        if: success()
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'actions@github.com'
          
          # Ajouter les fichiers de modèle
          git add models/ || true
          git add training_summary.txt || true
          git add finetune.log || true
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Add fine-tuned model: ${{ github.event.inputs.model_name }} [skip ci]"
            git push || echo "Push failed, but artifacts are still available"
          fi
      
      - name: 🎉 Success notification
        if: success()
        run: |
          echo "🎉 Fine-tuning completed successfully!"
          echo "📋 Summary:"
          echo "  - Model: ${{ github.event.inputs.model_name }}"
          echo "  - Training completed: ✅"
          echo "  - Artifacts uploaded: ✅"
          if [ "${{ github.event.inputs.push_to_hub }}" = "true" ]; then
            echo "  - HuggingFace Hub: ✅ https://huggingface.co/Bencode92/${{ github.event.inputs.model_name }}"
          else
            echo "  - HuggingFace Hub: ❌ (disabled)"
          fi
          echo ""
          echo "📥 Download artifacts from the Actions tab to get your trained model!"
