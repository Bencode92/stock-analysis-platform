name: Update Market Data (Optimized)

# Version optimis√©e pour rester dans les limites du plan gratuit Twelve Data
# Plan gratuit : 800 cr√©dits/jour, 8 requ√™tes/minute

on:
  schedule:
    # Mise √† jour des secteurs 4 fois par jour en semaine (heures de march√© EU/US)
    # 08h UTC (9h Paris, pr√©-ouverture EU)
    # 13h UTC (14h Paris, 9h NYC - ouverture US)
    # 16h UTC (17h Paris, midi NYC)
    # 20h UTC (21h Paris, 16h NYC - cl√¥ture US)
    - cron: '0 8,13,16,20 * * 1-5'
    
    # Mise √† jour hebdomadaire des holdings (dimanche matin)
    - cron: '0 6 * * 0'
    
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type de mise √† jour'
        required: true
        default: 'sectors'
        type: choice
        options:
          - sectors
          - holdings
          - both

env:
  # Limites pour rester dans le plan gratuit
  MAX_ETFS_PER_RUN: 30  # Limite le nombre d'ETFs par ex√©cution
  API_SLEEP_TIME: 8     # Pause de 8 secondes entre les requ√™tes (respect du rate limit)

jobs:
  check-market-hours:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
      is_market_day: ${{ steps.check.outputs.is_market_day }}
    
    steps:
      - name: Check if market is open
        id: check
        run: |
          # Obtenir le jour de la semaine (1=Lundi, 7=Dimanche)
          DAY_OF_WEEK=$(date -u +%u)
          HOUR=$(date -u +%H)
          
          # V√©rifier si c'est un jour de march√©
          if [ $DAY_OF_WEEK -ge 1 ] && [ $DAY_OF_WEEK -le 5 ]; then
            echo "is_market_day=true" >> $GITHUB_OUTPUT
            
            # V√©rifier si on est dans les heures de march√© √©largies (7h-22h UTC)
            if [ $HOUR -ge 7 ] && [ $HOUR -le 22 ]; then
              echo "should_run=true" >> $GITHUB_OUTPUT
              echo "‚úÖ Jour de march√©, heure appropri√©e"
            else
              echo "should_run=false" >> $GITHUB_OUTPUT
              echo "‚è∞ En dehors des heures de march√©"
            fi
          else
            echo "is_market_day=false" >> $GITHUB_OUTPUT
            echo "should_run=false" >> $GITHUB_OUTPUT
            echo "üö´ Weekend - pas de mise √† jour"
          fi

  update-sectors:
    runs-on: ubuntu-latest
    needs: check-market-hours
    # S'ex√©cute seulement pendant les heures de march√© OU manuellement
    if: |
      (github.event_name == 'schedule' && needs.check-market-hours.outputs.should_run == 'true') ||
      (github.event_name == 'workflow_dispatch' && (github.event.inputs.update_type == 'sectors' || github.event.inputs.update_type == 'both'))
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Update sectors data (optimized)
        env:
          TWELVE_DATA_API: ${{ secrets.TWELVE_DATA_API }}
          SECTOR_TAXONOMY: ICB
          MAX_ETFS: ${{ env.MAX_ETFS_PER_RUN }}
          API_SLEEP: ${{ env.API_SLEEP_TIME }}
        run: |
          echo "üöÄ Mise √† jour optimis√©e des donn√©es sectorielles..."
          echo "‚öôÔ∏è Limite: $MAX_ETFS ETFs, pause: ${API_SLEEP}s entre requ√™tes"
          
          # Le script respectera les variables d'environnement pour limiter les appels
          python scripts/update_sectors_data_etf.py
          
          # Afficher les statistiques
          if [ -f data/sectors.json ]; then
            echo "üìä Statistiques de mise √† jour:"
            python -c "
import json
with open('data/sectors.json') as f:
    data = json.load(f)
    meta = data.get('meta', {})
    print(f\"  - ETFs trait√©s: {meta.get('count', 0)}/{meta.get('total_etfs', 0)}\")
    print(f\"  - Erreurs: {meta.get('errors_count', 0)}\")
    print(f\"  - Timestamp: {meta.get('timestamp', 'N/A')}\")
            "
          fi
      
      - name: Commit and push changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          # V√©rifier s'il y a des changements
          if [[ -n $(git status -s data/sectors.json) ]]; then
            git add data/sectors.json
            TIMESTAMP=$(date -u +'%Y-%m-%d %H:%M UTC')
            git commit -m "üîÑ Update sectors data (optimized) [$TIMESTAMP]"
            git push
            echo "‚úÖ Donn√©es mises √† jour et push√©es"
          else
            echo "‚ÑπÔ∏è Aucun changement d√©tect√©"
          fi

  update-holdings:
    runs-on: ubuntu-latest
    # S'ex√©cute le dimanche OU manuellement
    if: |
      (github.event_name == 'schedule' && contains(github.event.schedule, '0 6 * * 0')) ||
      (github.event_name == 'workflow_dispatch' && (github.event.inputs.update_type == 'holdings' || github.event.inputs.update_type == 'both'))
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Update ETF holdings
        env:
          TWELVE_DATA_API: ${{ secrets.TWELVE_DATA_API }}
          HOLDINGS_MAX: '10'
          HOLDINGS_STALE_DAYS: '7'
          HOLDINGS_SLEEP: '1.0'  # Pause plus longue pour les holdings
        run: |
          echo "üìä Mise √† jour hebdomadaire des holdings ETF..."
          python scripts/update_etf_holdings.py
          
          # Afficher la taille du fichier g√©n√©r√©
          if [ -f data/etf_holdings.json ]; then
            echo "üìÅ Fichier g√©n√©r√©:"
            ls -lh data/etf_holdings.json
          fi
      
      - name: Commit and push holdings
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          if [[ -n $(git status -s data/etf_holdings.json) ]]; then
            git add data/etf_holdings.json
            git commit -m "üìà Update ETF holdings [Weekly - $(date -u +'%Y-%m-%d')]"
            git push
            echo "‚úÖ Holdings mis √† jour"
          else
            echo "‚ÑπÔ∏è Pas de changement dans les holdings"
          fi

  monitor-api-usage:
    runs-on: ubuntu-latest
    needs: [update-sectors]
    if: always()
    
    steps:
      - name: Estimate API credits usage
        run: |
          echo "üìä Estimation de la consommation de cr√©dits API:"
          echo ""
          echo "Plan gratuit Twelve Data: 800 cr√©dits/jour"
          echo ""
          echo "Consommation estim√©e par jour (jours de march√©):"
          echo "- Secteurs: 4 updates √ó 30 ETFs √ó 2 cr√©dits = ~240 cr√©dits"
          echo "- Total journalier: ~240 cr√©dits"
          echo ""
          echo "Consommation hebdomadaire:"
          echo "- Holdings (dimanche): 40 ETFs √ó 200 cr√©dits = ~8000 cr√©dits"
          echo "  ‚ö†Ô∏è Attention: d√©passe la limite journali√®re!"
          echo "  üí° Solution: √©taler sur plusieurs jours ou r√©duire le nombre d'ETFs"
          echo ""
          echo "Marge disponible: ~560 cr√©dits/jour pour autres usages"
