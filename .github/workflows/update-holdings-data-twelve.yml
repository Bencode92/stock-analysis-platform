name: Update Holdings via Twelve Data API

on:
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Forcer la mise √† jour'
        required: false
        default: 'true'  # Manuel = force par d√©faut
        type: choice
        options: ['true', 'false']
      max_holdings:
        description: 'Max holdings/ETF'
        required: false
        default: '10'
        type: string
  schedule:
    - cron: '0 3 * * 0'

permissions:
  contents: write

env:
  PYTHON_VERSION: '3.10'
  TZ: 'Europe/Paris'

jobs:
  update-holdings:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Preflight checks
        run: |
          if [ -z "${{ secrets.TWELVE_DATA_API }}" ]; then
            echo "::error::Secret TWELVE_DATA_API missing"
            exit 1
          fi
          if [ ! -f "data/sectors.json" ]; then
            echo "::error::data/sectors.json not found (run sectors workflow first)"
            exit 1
          fi

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Check holdings status
        id: check_status
        run: |
          if [ -f "data/etf_holdings.json" ]; then
            FILE_AGE=$((($(date +%s) - $(date -r data/etf_holdings.json +%s)) / 86400))
            echo "Current file age: ${FILE_AGE}d"
            if [ $FILE_AGE -lt 6 ] && [ "${{ github.event.inputs.force_update }}" != "true" ]; then
              echo "skip_update=true" >> $GITHUB_OUTPUT
              echo "Skipping (fresh file, use force_update=true to override)."
            else
              echo "skip_update=false" >> $GITHUB_OUTPUT
              echo "Updating (stale or forced)."
            fi
          else
            echo "skip_update=false" >> $GITHUB_OUTPUT
            echo "No existing file ‚Äî will generate."
          fi

      - name: Force delete existing file (if requested)
        if: github.event.inputs.force_update == 'true'
        run: rm -f data/etf_holdings.json || true

      - name: Update holdings
        if: ${{ github.event_name == 'workflow_dispatch' || steps.check_status.outputs.skip_update != 'true' }}
        env:
          TWELVE_DATA_API: ${{ secrets.TWELVE_DATA_API }}
          HOLDINGS_MAX: ${{ github.event.inputs.max_holdings || '10' }}
          HOLDINGS_STALE_DAYS: '7'
          HOLDINGS_SLEEP: '0.0'          # on laisse le rate-limiter g√©rer
          FORCE_UPDATE: ${{ github.event.inputs.force_update || 'false' }}
          TD_CREDIT_LIMIT: '2584'        # Limite de cr√©dits par minute
          TD_COST_COMPOSITION: '200'     # Co√ªt par appel composition
          TD_BUFFER_CREDITS: '84'        # Marge de s√©curit√© (12 appels/min = 2400, marge 84)
        run: |
          echo "üöÄ Lancement avec rate limiting intelligent"
          echo "   Max: 12 appels/min (2400 cr√©dits sur 2584)"
          python scripts/update_holdings.py

      - name: Verify results
        if: ${{ github.event_name == 'workflow_dispatch' || steps.check_status.outputs.skip_update != 'true' }}
        run: |
          test -f data/etf_holdings.json || (echo "::error::File not generated"; exit 1)
          ls -lh data/etf_holdings.json
          
          # Afficher les stats
          python -c "
import json
with open('data/etf_holdings.json') as f:
    data = json.load(f)
    meta = data.get('meta', {})
    print(f'‚úÖ ETFs: {meta.get(\"etf_count\", 0)}')
    print(f'üìä Holdings: {meta.get(\"total_holdings\", 0)}')
    print(f'üí≥ Cr√©dits: {meta.get(\"api_credits_used\", 0)}')
    print(f'‚ö†Ô∏è Sans couverture: {meta.get(\"no_coverage_count\", 0)}')
          "

      - name: Commit & push
        if: ${{ github.event_name == 'workflow_dispatch' || steps.check_status.outputs.skip_update != 'true' }}
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add data/etf_holdings.json
          git diff --cached --quiet || {
            git commit -m "üìà Update ETF holdings [$(date -u +'%F %H:%M')]"
            git push
          }
