// server.js - Serveur proxy pour l'API Perplexity
const express = require('express');
const cors = require('cors');
const axios = require('axios');
const dotenv = require('dotenv');
const path = require('path');

// Charger les variables d'environnement
dotenv.config();

// Cl√© API Perplexity (stock√©e dans le fichier .env)
const PERPLEXITY_API_KEY = process.env.PERPLEXITY_API_KEY;

if (!PERPLEXITY_API_KEY) {
  console.error('‚ö†Ô∏è Cl√© API Perplexity manquante. Cr√©ez un fichier .env avec PERPLEXITY_API_KEY=votre_cl√©_api');
  process.exit(1);
}

const app = express();
const PORT = process.env.PORT || 3000;

// Configuration CORS pour n'accepter que les requ√™tes de votre domaine
const corsOptions = {
  origin: ['https://bencode92.github.io', 'http://localhost:5500'], // Ajoutez votre domaine de d√©veloppement local si n√©cessaire
  methods: ['GET', 'POST'],
  allowedHeaders: ['Content-Type']
};

// Middleware
app.use(cors(corsOptions));
app.use(express.json());

// Route API pour les actualit√©s financi√®res
app.post('/api/perplexity/news', async (req, res) => {
  try {
    const prompt = "Donne-moi un r√©sum√© des actualit√©s financi√®res du jour concernant les march√©s US et fran√ßais. Format: 3 actualit√©s principales par march√©, avec source, date, heure, titre et contenu. Pour chaque actualit√©, mentionne l'impact potentiel sur les investissements. Pr√©sente les donn√©es dans un format JSON structur√© avec deux cat√©gories: us et france.";
    
    const response = await axios.post('https://api.perplexity.ai/chat/completions', {
      model: 'sonar-pro',
      messages: [
        { role: 'system', content: 'Tu es un expert en finance qui fournit des informations pr√©cises et √† jour. R√©ponds au format JSON uniquement.' },
        { role: 'user', content: prompt }
      ]
    }, {
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${PERPLEXITY_API_KEY}`
      }
    });

    // Extraire et traiter la r√©ponse JSON
    let perplexityResponse = response.data.choices[0].message.content;
    
    // Nettoyer le JSON si n√©cessaire (enlever les backticks et identifiants json)
    perplexityResponse = perplexityResponse.replace(/```json\n|```\n|```/g, '').trim();
    
    // Parser le JSON
    const newsData = JSON.parse(perplexityResponse);
    
    // Ajouter un timestamp pour le frontend
    newsData.lastUpdated = new Date().toISOString();
    
    res.json(newsData);
  } catch (error) {
    console.error('Erreur lors de la r√©cup√©ration des actualit√©s:', error.message);
    if (error.response) {
      console.error('R√©ponse d\'erreur:', error.response.data);
    }
    res.status(500).json({ error: 'Erreur lors de la r√©cup√©ration des actualit√©s', details: error.message });
  }
});

// Route API pour les portefeuilles recommand√©s
app.post('/api/perplexity/portfolios', async (req, res) => {
  try {
    const prompt = "En te basant sur les actualit√©s financi√®res r√©centes et le contexte √©conomique global, g√©n√®re 3 portefeuilles d'investissement (agressif, mod√©r√© et stable) avec 6-10 actifs chacun incluant stocks, ETF, crypto, bonds. Pour chaque actif, fournis: Nom complet, Symbole/ticker, Type d'actif, Pourcentage d'allocation (total 100%), Justification courte bas√©e sur les actualit√©s r√©centes. Format JSON structur√© avec trois cat√©gories: agressif, modere, stable.";
    
    const response = await axios.post('https://api.perplexity.ai/chat/completions', {
      model: 'sonar-pro',
      messages: [
        { role: 'system', content: 'Tu es un conseiller financier expert qui fournit des recommandations d\'investissement actualis√©es. R√©ponds au format JSON uniquement.' },
        { role: 'user', content: prompt }
      ]
    }, {
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${PERPLEXITY_API_KEY}`
      }
    });

    // Extraire et traiter la r√©ponse JSON
    let perplexityResponse = response.data.choices[0].message.content;
    
    // Nettoyer le JSON si n√©cessaire
    perplexityResponse = perplexityResponse.replace(/```json\n|```\n|```/g, '').trim();
    
    // Parser le JSON
    const portfoliosData = JSON.parse(perplexityResponse);
    
    // Ajouter un timestamp pour le frontend
    portfoliosData.lastUpdated = new Date().toISOString();
    
    res.json(portfoliosData);
  } catch (error) {
    console.error('Erreur lors de la r√©cup√©ration des portefeuilles:', error.message);
    if (error.response) {
      console.error('R√©ponse d\'erreur:', error.response.data);
    }
    res.status(500).json({ error: 'Erreur lors de la r√©cup√©ration des portefeuilles', details: error.message });
  }
});

// Route API pour les recherches personnalis√©es
app.post('/api/perplexity/search', async (req, res) => {
  try {
    const { query } = req.body;
    
    if (!query) {
      return res.status(400).json({ error: 'La requ√™te de recherche est requise' });
    }
    
    const response = await axios.post('https://api.perplexity.ai/chat/completions', {
      model: 'sonar-pro',
      messages: [
        { role: 'system', content: 'Tu es un expert en finance qui fournit des analyses d√©taill√©es avec des sources. Inclus toujours 3 sources pertinentes et 3 questions associ√©es dans ta r√©ponse.' },
        { role: 'user', content: query }
      ]
    }, {
      headers: {
        'Content-Type': 'application/json',
        'Authorization': `Bearer ${PERPLEXITY_API_KEY}`
      }
    });

    // Traitement de la r√©ponse
    const content = response.data.choices[0].message.content;
    
    // Cr√©e une structure de r√©ponse adapt√©e √† l'UI
    // Dans un cas r√©el, vous devriez parser plus intelligemment le contenu
    // Ici nous utilisons une approche simplifi√©e
    const result = {
      answer: `<p>${content.replace(/\n\n/g, '</p><p>')}</p>`,
      sources: [
        { title: "Financial Markets Analysis", url: "#", publisher: "Bloomberg", date: new Date().toLocaleDateString('fr-FR') },
        { title: "Economic Outlook", url: "#", publisher: "Financial Times", date: new Date().toLocaleDateString('fr-FR') },
        { title: "Investment Strategies", url: "#", publisher: "Wall Street Journal", date: new Date().toLocaleDateString('fr-FR') }
      ],
      relatedQueries: [
        "Comment ces informations affectent les march√©s europ√©ens?",
        "Quelles strat√©gies d'investissement sont recommand√©es dans ce contexte?",
        "Quelles sont les perspectives √† long terme pour ce secteur?"
      ]
    };
    
    res.json(result);
  } catch (error) {
    console.error('Erreur lors de la recherche:', error.message);
    if (error.response) {
      console.error('R√©ponse d\'erreur:', error.response.data);
    }
    res.status(500).json({ error: 'Erreur lors de la recherche', details: error.message });
  }
});

// Route de base pour v√©rifier si le serveur est en ligne
app.get('/', (req, res) => {
  res.json({ 
    status: 'online', 
    message: 'TradePulse API Server is running',
    endpoints: [
      '/api/perplexity/news',
      '/api/perplexity/portfolios',
      '/api/perplexity/search'
    ] 
  });
});

// D√©marrer le serveur
app.listen(PORT, () => {
  console.log(`üöÄ Serveur proxy Perplexity d√©marr√© sur le port ${PORT}`);
  console.log(`üì° API accessible sur http://localhost:${PORT}`);
});