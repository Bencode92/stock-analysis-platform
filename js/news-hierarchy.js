/**
 * news-hierarchy.js
 * Syst√®me central de hi√©rarchisation des actualit√©s financi√®res
 */

// Namespace global pour les actualit√©s
window.NewsSystem = {
    data: null,
    isLoading: false,
    // Stockage des cat√©gories d'actualit√©s
    categorizedNews: {
        critical: [],
        important: [],
        regular: []
    },
    // √âv√©nement personnalis√© pour notifier quand les donn√©es sont pr√™tes
    dataReadyEvent: new CustomEvent('newsDataReady')
};

// Initialisation: ajouter cette fonction au chargement de la page
document.addEventListener('DOMContentLoaded', function() {
    // V√©rifier si nous sommes sur la page des actualit√©s
    const newsContainers = document.getElementById('critical-news-container') || 
                           document.getElementById('important-news-container') || 
                           document.getElementById('recent-news');
    
    if (newsContainers) {
        console.log('Initialisation du syst√®me de hi√©rarchie des actualit√©s');
        initializeNewsData();
    }
});

/**
 * Charge et initialise les donn√©es d'actualit√©s
 */
async function initializeNewsData() {
    if (window.NewsSystem.isLoading) return;
    
    window.NewsSystem.isLoading = true;
    
    try {
        // Afficher les √©tats de chargement dans les conteneurs
        showLoadingState('critical-news-container');
        showLoadingState('important-news-container');
        showLoadingState('recent-news');
        
        let data;
        
        // CORRECTION: Revenir √† classified_news.json pour les donn√©es hi√©rarchis√©es
        console.log('üìä Chargement des donn√©es classifi√©es depuis classified_news.json');
        const response = await fetch('data/classified_news.json');
        
        if (!response.ok) {
            throw new Error('Impossible de charger les donn√©es');
        }
        
        data = await response.json();
        console.log('‚úÖ Donn√©es classifi√©es charg√©es avec succ√®s');
        
        window.NewsSystem.data = data;
        
        // Distribuer les actualit√©s selon leur importance/hi√©rarchie
        distributeNewsByImportance(data);
        
        console.log('Donn√©es d\'actualit√©s charg√©es et distribu√©es');
        
        // D√©clencher l'√©v√©nement qui indique que les donn√©es sont pr√™tes
        document.dispatchEvent(window.NewsSystem.dataReadyEvent);
        console.log('√âv√©nement newsDataReady d√©clench√© apr√®s chargement des donn√©es');
    } catch (error) {
        console.error('Erreur lors du chargement des actualit√©s:', error);
        displayFallbackData();
    } finally {
        window.NewsSystem.isLoading = false;
    }
}

/**
 * Distribue les actualit√©s par niveau d'importance
 * @param {Object} newsData - Donn√©es d'actualit√©s
 */
function distributeNewsByImportance(newsData) {
    // V√©rification des donn√©es
    if (!newsData || (!newsData.usa && !newsData.france)) {
        console.error("Donn√©es d'actualit√©s non disponibles");
        return;
    }

    // Fusionner les actualit√©s US et France
    const allNews = [...(newsData.usa || []), ...(newsData.france || [])];

    // S'assurer que tous les champs ML sont pr√©sents
    allNews.forEach(news => {
        // Utiliser les attributs existants ou les calculer si non pr√©sents
        if (!news.sentiment) {
            news.sentiment = news.impact || 'neutral';
        }
        
        if (typeof news.confidence === 'undefined') {
            news.confidence = news.feedback_confidence || 0.8;
        }
        
        if (typeof news.score === 'undefined') {
            news.score = calculateNewsScore(news);
        }
        
        // CORRECTION: S'assurer que impact est toujours d√©fini correctement
        if (!news.impact || news.impact === 'general') {
            // Si pas d'impact ou si 'general', utiliser le sentiment comme base
            if (news.sentiment === 'positive') {
                news.impact = 'positive';
            } else if (news.sentiment === 'negative') {
                news.impact = 'negative';
            } else {
                news.impact = 'neutral';
            }
        }
        
        // Utiliser hierarchy si pr√©sent, sinon d√©river du score
        if (!news.hierarchy) {
            if (news.score >= 15) {
                news.hierarchy = 'critical';
            } else if (news.score >= 8) {
                news.hierarchy = 'important';
            } else {
                news.hierarchy = 'normal';
            }
        }
        
        // NOUVEAU: Conversion des cat√©gories en fran√ßais vers l'anglais
        if (news.category === 'economie') {
            news.category = 'economy';
        } else if (news.category === 'marches') {
            news.category = 'markets';
        } else if (news.category === 'entreprises') {
            news.category = 'companies';
        }
    });

    // Filtrer les actualit√©s par hi√©rarchie (pr√©f√©rer hierarchy sur score si disponible)
    const criticalNews = allNews.filter(news => 
        news.hierarchy === 'critical' || (!news.hierarchy && news.score >= 15)
    );
    
    const importantNews = allNews.filter(news => 
        news.hierarchy === 'important' || (!news.hierarchy && news.score >= 8 && news.score < 15)
    );
    
    const regularNews = allNews.filter(news => 
        news.hierarchy === 'normal' || (!news.hierarchy && news.score < 8)
    );
    
    // AM√âLIORATION: Tri par score ML d√©croissant √† l'int√©rieur de chaque cat√©gorie
    criticalNews.sort((a, b) => {
        // Priorit√© au score ML, puis √† la confiance en cas d'√©galit√©
        if (b.score !== a.score) return b.score - a.score;
        return b.confidence - a.confidence;
    });
    
    importantNews.sort((a, b) => {
        if (b.score !== a.score) return b.score - a.score;
        return b.confidence - a.confidence;
    });
    
    regularNews.sort((a, b) => {
        if (b.score !== a.score) return b.score - a.score;
        return b.confidence - a.confidence;
    });

    // Stocker les actualit√©s cat√©goris√©es
    window.NewsSystem.categorizedNews = {
        critical: criticalNews,
        important: importantNews,
        regular: regularNews
    };

    // NOUVEAU: Logs de d√©bogage pour v√©rifier les nombres d'actualit√©s par cat√©gorie
    console.log(`Actualit√©s critiques: ${criticalNews.length}`);
    console.log(`Actualit√©s importantes: ${importantNews.length}`);
    console.log(`Actualit√©s g√©n√©rales: ${regularNews.length}`);

    // NOUVEAU: Logs de d√©bogage pour v√©rifier la r√©partition des sentiments
    const positiveCount = allNews.filter(n => n.sentiment === 'positive').length;
    const negativeCount = allNews.filter(n => n.sentiment === 'negative').length;
    const neutralCount = allNews.filter(n => n.sentiment === 'neutral' || !n.sentiment).length;
    console.log(`Sentiments: ${positiveCount} positifs, ${negativeCount} n√©gatifs, ${neutralCount} neutres`);

    // Afficher dans les sections correspondantes
    displayCriticalNews(criticalNews);
    displayImportantNews(importantNews);
    displayRecentNews(regularNews);

    console.log(`Actualit√©s distribu√©es: ${criticalNews.length} critiques, ${importantNews.length} importantes, ${regularNews.length} r√©guli√®res`);
}

/**
 * Calcule un score pour classer l'importance d'une actualit√©
 * @param {Object} item - √âl√©ment d'actualit√©
 * @returns {number} - Score d'importance
 */
function calculateNewsScore(item) {
    const content = `${item.title} ${item.content || ''}`.toLowerCase();

    const keywords = {
        "high_impact": [
            "crash", "collapse", "recession", "fail", "bankruptcy", 
            "inflation", "hike", "drop", "plunge", "default", "fitch downgrade", "downgrade", 
            "bond yield", "yield curve", "sell-off", "bear market", "contagion"
        ],
        "medium_impact": [
            "growth", "expansion", "job report", "fed decision", "quarterly earnings", "acquisition", 
            "ipo", "merger", "partnership", "profit warning", "bond issuance", "employment", 
            "report", "fe